inline sequence test
	[TRUE, 5]var[res]PRINTLN
	[FALSE, 0]var[get]PRINTLN
	
	["Enter two booleans: "]PRINT
	[FALSE]INPUT[bool1]
	[FALSE]INPUT[bool2]
	[bool1, bool2]printBooleanOps
	
	["Enter two ints: "]PRINT
	[0]INPUT[int1] [0]INPUT[int2]
	[int1,int2]SWAP[int1,int2]
	[int1, "+", int2, "="]PRINT [int1, int2, int1]+[result]PRINTLN // TODO really need signature checks
	[int1, "-", int2, "="]PRINT [int1, int2]-[result]PRINTLN
	[int1, "*", int2, "="]PRINT [int1, int2]*[result]PRINTLN
	[int1, "/", int2, "="]PRINT [int1, int2]/[result]PRINTLN
	[int1, "%", int2, "="]PRINT [int1, int2]%[result]PRINTLN
	[int1, "=", int2, "?  "]PRINT [int1, int2]=[bresult]PRINTLN
	[int1, "!=", int2, "? "]PRINT [int1, int2]!=[bresult]PRINTLN
	[int1, ">", int2, "?  "]PRINT [int1, int2]>[bresult]PRINTLN
	[int1, "<", int2, "?  "]PRINT [int1, int2]<[bresult]PRINTLN
	[int1, ">=", int2, "? "]PRINT [int1, int2]>=[bresult]PRINTLN
	[int1, "<=", int2, "? "]PRINT [int1, int2]<=[bresult]PRINTLN

static sequence [write:Bool, value:I32]var[glob:I32] // Should behave statically
	[write, value, glob]?:[glob]

static sequence [bool1:Bool, bool2:Bool]printBooleanOps
	[bool1, bool2]XOR[x]  ["Result of XOR:  ", x]PRINTLN
	[bool1, bool2]AND[x]  ["Result of AND:  ", x]PRINTLN
	[bool1, bool2]OR[x]   ["Result of OR:   ", x]PRINTLN
	[bool1, bool2]XNOR[x] ["Result of XNOR: ", x]PRINTLN
	[bool1, bool2]NAND[x] ["Result of NAND: ", x]PRINTLN
	[bool1, bool2]NOR[x]  ["Result of NOR:  ", x]PRINTLN

inline sequence [a:Anything, b:Anything]SWAP[newA:typeof a, newB:typeof b]
	[a]:[newB]
	[b]:[newA]